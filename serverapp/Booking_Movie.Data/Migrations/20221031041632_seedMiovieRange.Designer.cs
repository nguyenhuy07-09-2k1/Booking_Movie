// <auto-generated />
using System;
using Booking_Movie.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking_Movie.Data.Migrations
{
    [DbContext(typeof(BookingMovieContext))]
    [Migration("20221031041632_seedMiovieRange")]
    partial class seedMiovieRange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Booking_Movie.Data.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NationalityId")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NationalityId");

                    b.ToTable("Actors", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("354b3fae-02fc-482f-bf68-1cc40b04c34f"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5301),
                            DateOfBirth = new DateTime(1990, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.64m,
                            Image = "",
                            Name = "Ninh Dương Lan Ngọc",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5301),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("1fa1a35a-d969-4b44-8cc0-1f6fbff578fb"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5304),
                            DateOfBirth = new DateTime(1991, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.67m,
                            Image = "",
                            Name = "Katy Nguyễn",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5304),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("343d4b37-c4f7-4d24-adb6-05abeda8aa41"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5306),
                            DateOfBirth = new DateTime(1989, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.7m,
                            Image = "",
                            Name = "NSƯT Lê Khanh",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5307),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("bf79e94c-2b38-4763-aacd-8161006e8347"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5309),
                            DateOfBirth = new DateTime(1988, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.65m,
                            Image = "",
                            Name = "Hữu Châu",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5309),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("26340d49-35d2-4696-addf-e4fc97cd5300"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5311),
                            DateOfBirth = new DateTime(1987, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.81m,
                            Image = "",
                            Name = "Lãnh Thanh",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5312),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("376ef100-3a18-45dd-b83c-517d2cafc0dc"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5313),
                            DateOfBirth = new DateTime(1986, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.76m,
                            Image = "",
                            Name = "Lê Xuân Tiền",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5314),
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.ActorImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.ToTable("ActorImages", (string)null);
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.AppConfig", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("AppConfigs", (string)null);
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab778d64-0d3e-4ab6-bc7c-a50b93de737b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d476d3d1-9045-4220-a593-abf3d52d6f0c",
                            Email = "dangit19@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Đăng",
                            LastName = "Nguyễn Minh",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJrdd8eXhWlboIjEVJgBHJEOQ12GCrtnQsUVRGnS5ffEZAUzDoOgGIF6N7cObj57SA==",
                            PhoneNumber = "0364125410",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "dangnhinho"
                        },
                        new
                        {
                            Id = new Guid("d83ac55f-ef97-468f-a493-e9a8eeec395e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d3cdedf-af91-49da-9704-93ec1fa153eb",
                            Email = "khanhit19@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Khánh",
                            LastName = "Nguyễn",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEPALw1fMHavO1KncYF2wqt8WjnNvk1c3UljE72KWhAzMkSXvT+ThlmlDF2UHpD5leA==",
                            PhoneNumber = "0364125420",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "khanhalone"
                        },
                        new
                        {
                            Id = new Guid("c8a04d06-2334-4806-92a6-6f6db3ed6692"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69aac4aa-5dcc-4b5d-b1dd-0333539fe759",
                            Email = "thaoit19@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Thảo",
                            LastName = "Nguyễn Hoàng",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEIUWiUb6j5zSldpLQVmzas7ZGXQHKI0KIO0ztiSbPw8+dadpugtBu69PPLdKuDcy8A==",
                            PhoneNumber = "0364125430",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "thaoit"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Auditorium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Auditoriums", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            Name = "Phong-01"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            Name = "Phong-02"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 2,
                            Name = "Phong-01"
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 3,
                            Name = "Phong-01"
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 4,
                            Name = "Phong-01"
                        },
                        new
                        {
                            Id = 6,
                            CinemaId = 5,
                            Name = "Phong-01"
                        },
                        new
                        {
                            Id = 7,
                            CinemaId = 6,
                            Name = "Phong-01"
                        },
                        new
                        {
                            Id = 8,
                            CinemaId = 6,
                            Name = "Phong-02"
                        },
                        new
                        {
                            Id = 9,
                            CinemaId = 6,
                            Name = "Phong-03"
                        },
                        new
                        {
                            Id = 10,
                            CinemaId = 7,
                            Name = "Phong-01"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CouponId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int");

                    b.Property<bool>("Stauts")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(12,4)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CouponId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ScreeningId");

                    b.ToTable("Bookings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = new Guid("c8a04d06-2334-4806-92a6-6f6db3ed6692"),
                            CouponId = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethodId = 1,
                            ScreeningId = 1,
                            Stauts = true,
                            Total = 420000m
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.BookingCombo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Stauts")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("ComboId");

                    b.ToTable("BookingCombos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            ComboId = 1,
                            Quantity = 2,
                            Stauts = true
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 1,
                            ComboId = 2,
                            Quantity = 1,
                            Stauts = true
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 1,
                            ComboId = 3,
                            Quantity = 1,
                            Stauts = true
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.BookingTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Stauts")
                        .HasColumnType("bit");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("TicketId");

                    b.ToTable("BookingTickets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            Quantity = 2,
                            Stauts = true,
                            TicketId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 1,
                            Quantity = 1,
                            Stauts = true,
                            TicketId = 2
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("MovieId");

                    b.ToTable("Casts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActorId = new Guid("354b3fae-02fc-482f-bf68-1cc40b04c34f"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActorId = new Guid("1fa1a35a-d969-4b44-8cc0-1f6fbff578fb"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActorId = new Guid("343d4b37-c4f7-4d24-adb6-05abeda8aa41"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActorId = new Guid("bf79e94c-2b38-4763-aacd-8161006e8347"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActorId = new Guid("26340d49-35d2-4696-addf-e4fc97cd5300"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActorId = new Guid("376ef100-3a18-45dd-b83c-517d2cafc0dc"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 7,
                            ActorId = new Guid("bdef1607-3be2-4613-b6db-eef50a851237"),
                            MovieId = 2
                        },
                        new
                        {
                            Id = 8,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 2
                        },
                        new
                        {
                            Id = 9,
                            ActorId = new Guid("376ef100-3a18-45dd-b83c-517d2cafc0dc"),
                            MovieId = 3
                        },
                        new
                        {
                            Id = 10,
                            ActorId = new Guid("bdef1607-3be2-4613-b6db-eef50a851237"),
                            MovieId = 3
                        },
                        new
                        {
                            Id = 11,
                            ActorId = new Guid("376ef100-3a18-45dd-b83c-517d2cafc0dc"),
                            MovieId = 4
                        },
                        new
                        {
                            Id = 12,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 4
                        },
                        new
                        {
                            Id = 13,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 5
                        },
                        new
                        {
                            Id = 14,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 6
                        },
                        new
                        {
                            Id = 15,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 7
                        },
                        new
                        {
                            Id = 16,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 8
                        },
                        new
                        {
                            Id = 17,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 9
                        },
                        new
                        {
                            Id = 18,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 7
                        },
                        new
                        {
                            Id = 19,
                            ActorId = new Guid("a9886af6-ede6-422b-a808-a6dcce2d18e6"),
                            MovieId = 8
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("HomeFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HomeFlag = false,
                            Image = "",
                            Name = "Hành động"
                        },
                        new
                        {
                            Id = 2,
                            HomeFlag = false,
                            Image = "",
                            Name = "Hình sự"
                        },
                        new
                        {
                            Id = 3,
                            HomeFlag = false,
                            Image = "",
                            Name = "Chiến tranh"
                        },
                        new
                        {
                            Id = 4,
                            HomeFlag = false,
                            Image = "",
                            Name = "Hoạt hình"
                        },
                        new
                        {
                            Id = 5,
                            HomeFlag = false,
                            Image = "",
                            Name = "Kinh dị"
                        },
                        new
                        {
                            Id = 6,
                            HomeFlag = false,
                            Image = "",
                            Name = "Lãnh mạng"
                        },
                        new
                        {
                            Id = 7,
                            HomeFlag = false,
                            Image = "",
                            Name = "Lịch sử"
                        },
                        new
                        {
                            Id = 8,
                            HomeFlag = false,
                            Image = "",
                            Name = "Phiêu lưu"
                        },
                        new
                        {
                            Id = 9,
                            HomeFlag = false,
                            Image = "",
                            Name = "Tâm lý"
                        },
                        new
                        {
                            Id = 10,
                            HomeFlag = false,
                            Image = "",
                            Name = "Ly kì"
                        },
                        new
                        {
                            Id = 11,
                            HomeFlag = false,
                            Image = "",
                            Name = "Thần thoại"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Name = "Galaxy Nguyễn Du",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3,
                            Name = "Galaxy Cà Mau",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Name = "Galaxy Tân Bình",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Name = "Galaxy Kinh Dương Vương",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Name = "Galaxy Quang Trung",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 9,
                            Name = "Galaxy Bến Tre",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 6,
                            Name = "Galaxy Đà Nẵng",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 10,
                            Name = "Galaxy Hải Phòng",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,4)");

                    b.HasKey("Id");

                    b.ToTable("Combos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "1 BẮP + 1 NƯỚC 32 Oz (LIPTON/SUỐI/DIET PEPSI) + 1 SNACK",
                            Name = "iCombo 1 Big Extra",
                            Price = 99000m
                        },
                        new
                        {
                            Id = 2,
                            Description = "1 BẮP + 3 NƯỚC 32 Oz (LIPTON/SUỐI/DIET PEPSI) + 1 SNACK",
                            Name = "iCombo Friends 1 Big",
                            Price = 139000m
                        },
                        new
                        {
                            Id = 3,
                            Description = "1 BẮP + 2 NƯỚC 32 Oz (LIPTON/SUỐI/DIET PEPSI) + 1 SNACK",
                            Name = "iCombo 2 BIG Extra",
                            Price = 120000m
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(12,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "GEKIJFNF785MAJ",
                            AvailableQuantity = 10,
                            Discount = 5000m,
                            Name = "GEKIJFNFCCMAJ",
                            Status = true,
                            ValidFrom = new DateTime(2022, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValidTo = new DateTime(2022, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Alias = "KJMNNVDD452YTR",
                            AvailableQuantity = 5,
                            Discount = 2000m,
                            Name = "GEKIJFNFCCMAJ",
                            Status = true,
                            ValidFrom = new DateTime(2022, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValidTo = new DateTime(2022, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityId")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NationalityId");

                    b.ToTable("Directors", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("01c9b39b-ad45-41fe-ace0-244b38254f99"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5208),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Jaume Collet-Serra",
                            NationalityId = "es",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5218),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("88034877-a697-472c-a2d8-3d133792c463"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5223),
                            DateOfBirth = new DateTime(1986, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.85m,
                            Image = "",
                            Name = "Bảo Nhân",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5223),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("55266710-251a-45a1-b11b-d2e2e7e104ea"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5227),
                            DateOfBirth = new DateTime(1985, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.65m,
                            Image = "",
                            Name = "Nam Cito",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5227),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("c089db2a-468a-4287-8b45-a832bb10fe93"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5229),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Jaume Collet-Serra",
                            NationalityId = "es",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5230),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("ff9a4cc9-3191-4da4-9bf8-6cd8bd129138"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5231),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Ilya Maksimov",
                            NationalityId = "en",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5232),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("e37edc8f-48ff-40fe-bcfc-d37a689a5b04"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5234),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Lee Seok Hoon",
                            NationalityId = "ukr",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5234),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("eb504714-17f9-4aa3-8b5b-6360102f8453"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5236),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Brando Lee",
                            NationalityId = "en",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5236),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("7e02a8db-94e7-4842-8b35-96c48d0e0c63"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5238),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Parker Finn",
                            NationalityId = "ms",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5238),
                            ViewCount = 0
                        },
                        new
                        {
                            ID = new Guid("e717c0c2-82f5-46a8-8e50-95999e661a67"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5240),
                            DateOfBirth = new DateTime(1974, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Height = 1.75m,
                            Image = "",
                            Name = "Park Gyu Tae",
                            NationalityId = "tha",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5241),
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.DirectorImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("DirectorImages", (string)null);
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TP Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TP Hà Nội"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cà Mau"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Đồng Tháp"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cần Thơ"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Đà Nẵng"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ang Giang"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nghệ An"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Bến Tre"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hải Phòng"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Duration")
                        .HasColumnType("smallint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityId")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<Guid>("ProducerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoTrailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Co_Gai_Den_Tu_Qua_Khu",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5337),
                            Duration = (short)105,
                            Name = "Cô Gái Từ Quá Khứ",
                            NationalityId = "vi",
                            ProducerId = new Guid("7935c4e4-a92a-401c-a994-7bcf420e00aa"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5337),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Black_Adam",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5340),
                            Duration = (short)105,
                            Name = "Black Adam",
                            NationalityId = "en",
                            ProducerId = new Guid("3f8ba972-52da-4a37-b152-a92628e4b714"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5341),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Confidential_Assignment_2_:_International",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5343),
                            Duration = (short)105,
                            Name = "Confidential Assignment 2: International",
                            NationalityId = "vi",
                            ProducerId = new Guid("7935c4e4-a92a-401c-a994-7bcf420e00aa"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5343),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "Prey_For_The_Devil",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5346),
                            Duration = (short)105,
                            Name = "Prey For The Devil",
                            NationalityId = "ukr",
                            ProducerId = new Guid("c6c6386c-78d9-4e32-b993-d7b660210437"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5347),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "Don't_Look_At_The_Demon",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5349),
                            Duration = (short)105,
                            Name = "Don't Look At The Demon",
                            NationalityId = "tha",
                            ProducerId = new Guid("34652a25-e4ce-4994-a412-84ae013d775b"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5349),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 6,
                            Alias = "Gulliver_Returns",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5351),
                            Duration = (short)105,
                            Name = "Gulliver Returns",
                            NationalityId = "ms",
                            ProducerId = new Guid("272d7cd7-6ed5-428d-9bd9-ddeb0f5affea"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5351),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 7,
                            Alias = "Life_Is_Beautiful",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5353),
                            Duration = (short)105,
                            Name = "Life Is Beautiful",
                            NationalityId = "ko",
                            ProducerId = new Guid("e8a07088-de72-4b6c-bdd8-14370ab2a3ab"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5354),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 8,
                            Alias = "Smile",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5356),
                            Duration = (short)105,
                            Name = "Smile",
                            NationalityId = "es",
                            ProducerId = new Guid("8e82c641-c8f2-4ac9-820a-f59789bbd12f"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5356),
                            VideoTrailer = "duongdan.mp4"
                        },
                        new
                        {
                            Id = 9,
                            Alias = "Love_Destiny_The_Movie",
                            Content = "",
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5358),
                            Duration = (short)105,
                            Name = "Love Destiny The Movie",
                            NationalityId = "vi",
                            ProducerId = new Guid("7935c4e4-a92a-401c-a994-7bcf420e00aa"),
                            ReleaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5358),
                            VideoTrailer = "duongdan.mp4"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.MovieCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 9,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 10,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 6,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 7,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 8,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 9,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 10,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 5,
                            MovieId = 9
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.MovieDirector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieDireactors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = new Guid("55266710-251a-45a1-b11b-d2e2e7e104ea"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = new Guid("88034877-a697-472c-a2d8-3d133792c463"),
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            DirectorId = new Guid("e717c0c2-82f5-46a8-8e50-95999e661a67"),
                            MovieId = 2
                        },
                        new
                        {
                            Id = 4,
                            DirectorId = new Guid("7e02a8db-94e7-4842-8b35-96c48d0e0c63"),
                            MovieId = 3
                        },
                        new
                        {
                            Id = 5,
                            DirectorId = new Guid("eb504714-17f9-4aa3-8b5b-6360102f8453"),
                            MovieId = 4
                        },
                        new
                        {
                            Id = 6,
                            DirectorId = new Guid("e717c0c2-82f5-46a8-8e50-95999e661a67"),
                            MovieId = 5
                        },
                        new
                        {
                            Id = 7,
                            DirectorId = new Guid("7e02a8db-94e7-4842-8b35-96c48d0e0c63"),
                            MovieId = 6
                        },
                        new
                        {
                            Id = 8,
                            DirectorId = new Guid("88034877-a697-472c-a2d8-3d133792c463"),
                            MovieId = 7
                        },
                        new
                        {
                            Id = 9,
                            DirectorId = new Guid("55266710-251a-45a1-b11b-d2e2e7e104ea"),
                            MovieId = 8
                        },
                        new
                        {
                            Id = 10,
                            DirectorId = new Guid("88034877-a697-472c-a2d8-3d133792c463"),
                            MovieId = 9
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Nationality", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FlagActor")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagDirector")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagMovie")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagProducer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "vi",
                            Code = "vi",
                            Description = "Quốc gia Việt Nam",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Việt Nam"
                        },
                        new
                        {
                            Id = "es",
                            Code = "es",
                            Description = "Quốc gia Tây Ban Nha",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Tây Ban Nha"
                        },
                        new
                        {
                            Id = "en",
                            Code = "en",
                            Description = "Quốc gia Mỹ",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Mỹ"
                        },
                        new
                        {
                            Id = "ko",
                            Code = "ko",
                            Description = "Quốc gia Hàn Quốc",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Hàn Quốc"
                        },
                        new
                        {
                            Id = "zh",
                            Code = "zh",
                            Description = "Quốc gia Trung Quốc",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Trung Quốc"
                        },
                        new
                        {
                            Id = "au",
                            Code = "au",
                            Description = "Quốc gia Úc",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Úc"
                        },
                        new
                        {
                            Id = "tha",
                            Code = "tha",
                            Description = "Quốc gia Thái Lan",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Thái Lan"
                        },
                        new
                        {
                            Id = "ms",
                            Code = "ms",
                            Description = "Quốc gia Malaysia",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "MaLaysia"
                        },
                        new
                        {
                            Id = "ukr",
                            Code = "ukr",
                            Description = "Quốc gia Ukraina",
                            FlagActor = true,
                            FlagDirector = true,
                            FlagMovie = true,
                            FlagProducer = true,
                            Name = "Ukraina"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(12,4)");

                    b.Property<decimal?>("CostAdditional")
                        .HasColumnType("decimal(12,4)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Vi_dien_tu_momo",
                            Cost = 0m,
                            CostAdditional = 0m,
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5900),
                            Name = "Ví điện tử momo",
                            Status = true,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5902)
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Vi_Zalo",
                            Cost = 0m,
                            CostAdditional = 0m,
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5903),
                            Name = "Ví Zalo",
                            Status = true,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5904)
                        },
                        new
                        {
                            Id = 3,
                            Alias = "VNPAY",
                            Cost = 0m,
                            CostAdditional = 0m,
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5905),
                            Name = "VNPAY",
                            Status = true,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5906)
                        },
                        new
                        {
                            Id = 4,
                            Alias = "HSBC/Payoo-ATM/VISA/MASTER/JCB/QRCODE",
                            Cost = 0m,
                            CostAdditional = 0m,
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5907),
                            Name = "HSBC/Payoo - ATM/VISA/MASTER/JCB/QRCODE",
                            Status = true,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5908)
                        },
                        new
                        {
                            Id = 5,
                            Alias = "Vi_ShoppePay",
                            Cost = 0m,
                            CostAdditional = 0m,
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5909),
                            Name = "Ví ShopeePay",
                            Status = true,
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5910)
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Producer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NationalityId")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("NationalityId");

                    b.ToTable("Producers", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("7935c4e4-a92a-401c-a994-7bcf420e00aa"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5264),
                            Image = "",
                            Name = "MAR6 Pictures",
                            NationalityId = "vi",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5265)
                        },
                        new
                        {
                            ID = new Guid("8e82c641-c8f2-4ac9-820a-f59789bbd12f"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5267),
                            Image = "",
                            Name = "GDH 559",
                            NationalityId = "tha",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5267)
                        },
                        new
                        {
                            ID = new Guid("e8a07088-de72-4b6c-bdd8-14370ab2a3ab"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5270),
                            Image = "",
                            Name = "Warner Bros",
                            NationalityId = "en",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5270)
                        },
                        new
                        {
                            ID = new Guid("272d7cd7-6ed5-428d-9bd9-ddeb0f5affea"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5272),
                            Image = "",
                            Name = "CJ Entertainment",
                            NationalityId = "ko",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5272)
                        },
                        new
                        {
                            ID = new Guid("34652a25-e4ce-4994-a412-84ae013d775b"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5274),
                            Image = "",
                            Name = "Lionsgate",
                            NationalityId = "en",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5275)
                        },
                        new
                        {
                            ID = new Guid("c6c6386c-78d9-4e32-b993-d7b660210437"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5276),
                            Image = "",
                            Name = "Bliss Pictures",
                            NationalityId = "ms",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5277)
                        },
                        new
                        {
                            ID = new Guid("3f8ba972-52da-4a37-b152-a92628e4b714"),
                            CreatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5278),
                            Image = "",
                            Name = "95 Animation Studio",
                            NationalityId = "ukr",
                            UpdatedDate = new DateTime(2022, 10, 31, 11, 16, 30, 713, DateTimeKind.Local).AddTicks(5279)
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuditoriumId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("MovieTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShowTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriumId");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieTypeId");

                    b.ToTable("Screenings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuditoriumId = 1,
                            MovieId = 1,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 10, 29, 9, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuditoriumId = 2,
                            MovieId = 1,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 10, 29, 17, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuditoriumId = 5,
                            MovieId = 1,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 10, 30, 9, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AuditoriumId = 6,
                            MovieId = 1,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 10, 31, 10, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AuditoriumId = 7,
                            MovieId = 1,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 1, 11, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AuditoriumId = 2,
                            MovieId = 2,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 2, 13, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AuditoriumId = 3,
                            MovieId = 3,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 3, 14, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AuditoriumId = 4,
                            MovieId = 4,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 4, 15, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AuditoriumId = 5,
                            MovieId = 4,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 5, 16, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AuditoriumId = 6,
                            MovieId = 5,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 1, 6, 17, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AuditoriumId = 7,
                            MovieId = 5,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 1, 7, 18, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AuditoriumId = 6,
                            MovieId = 6,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 8, 19, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AuditoriumId = 5,
                            MovieId = 7,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 9, 20, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AuditoriumId = 4,
                            MovieId = 8,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 10, 21, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            AuditoriumId = 3,
                            MovieId = 9,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 11, 22, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            AuditoriumId = 2,
                            MovieId = 2,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 12, 8, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            AuditoriumId = 1,
                            MovieId = 3,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 13, 9, 29, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            AuditoriumId = 2,
                            MovieId = 4,
                            MovieTypeId = 1,
                            ShowTime = new DateTime(2022, 11, 14, 14, 29, 59, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.ScreeningType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScreeningTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "2D - Phụ đề"
                        },
                        new
                        {
                            Id = 2,
                            Name = "3D - Phụ đề"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Seat", b =>
                {
                    b.Property<string>("SeatId")
                        .HasColumnType("varchar(5)");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.HasKey("SeatId");

                    b.ToTable("Seats", (string)null);

                    b.HasData(
                        new
                        {
                            SeatId = "A1",
                            Number = (byte)1,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A2",
                            Number = (byte)2,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A3",
                            Number = (byte)3,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A4",
                            Number = (byte)4,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A5",
                            Number = (byte)5,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A6",
                            Number = (byte)6,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A7",
                            Number = (byte)7,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A8",
                            Number = (byte)8,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A9",
                            Number = (byte)9,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A10",
                            Number = (byte)10,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A11",
                            Number = (byte)11,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "A12",
                            Number = (byte)12,
                            Row = "A"
                        },
                        new
                        {
                            SeatId = "B1",
                            Number = (byte)1,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B2",
                            Number = (byte)2,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B3",
                            Number = (byte)3,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B4",
                            Number = (byte)4,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B5",
                            Number = (byte)5,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B6",
                            Number = (byte)6,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B7",
                            Number = (byte)7,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B8",
                            Number = (byte)8,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B9",
                            Number = (byte)9,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B10",
                            Number = (byte)10,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B11",
                            Number = (byte)11,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "B12",
                            Number = (byte)12,
                            Row = "B"
                        },
                        new
                        {
                            SeatId = "C1",
                            Number = (byte)1,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C2",
                            Number = (byte)2,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C3",
                            Number = (byte)3,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C4",
                            Number = (byte)4,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C5",
                            Number = (byte)5,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C6",
                            Number = (byte)6,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C7",
                            Number = (byte)7,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C8",
                            Number = (byte)8,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C9",
                            Number = (byte)9,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C10",
                            Number = (byte)10,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C11",
                            Number = (byte)11,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "C12",
                            Number = (byte)12,
                            Row = "C"
                        },
                        new
                        {
                            SeatId = "D1",
                            Number = (byte)1,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D2",
                            Number = (byte)2,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D3",
                            Number = (byte)3,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D4",
                            Number = (byte)4,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D5",
                            Number = (byte)5,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D6",
                            Number = (byte)6,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D7",
                            Number = (byte)7,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D8",
                            Number = (byte)8,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D9",
                            Number = (byte)9,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D10",
                            Number = (byte)10,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D11",
                            Number = (byte)11,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "D12",
                            Number = (byte)12,
                            Row = "D"
                        },
                        new
                        {
                            SeatId = "E1",
                            Number = (byte)1,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E2",
                            Number = (byte)2,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E3",
                            Number = (byte)3,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E4",
                            Number = (byte)4,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E5",
                            Number = (byte)5,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E6",
                            Number = (byte)6,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E7",
                            Number = (byte)7,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E8",
                            Number = (byte)8,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E9",
                            Number = (byte)9,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E10",
                            Number = (byte)10,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E11",
                            Number = (byte)11,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "E12",
                            Number = (byte)12,
                            Row = "E"
                        },
                        new
                        {
                            SeatId = "F1",
                            Number = (byte)1,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F2",
                            Number = (byte)2,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F3",
                            Number = (byte)3,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F4",
                            Number = (byte)4,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F5",
                            Number = (byte)5,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F6",
                            Number = (byte)6,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F7",
                            Number = (byte)7,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F8",
                            Number = (byte)8,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F9",
                            Number = (byte)9,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F10",
                            Number = (byte)10,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F11",
                            Number = (byte)11,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "F12",
                            Number = (byte)12,
                            Row = "F"
                        },
                        new
                        {
                            SeatId = "G1",
                            Number = (byte)1,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G2",
                            Number = (byte)2,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G3",
                            Number = (byte)3,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G4",
                            Number = (byte)4,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G5",
                            Number = (byte)5,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G6",
                            Number = (byte)6,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G7",
                            Number = (byte)7,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G8",
                            Number = (byte)8,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G9",
                            Number = (byte)9,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G10",
                            Number = (byte)10,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G11",
                            Number = (byte)11,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "G12",
                            Number = (byte)12,
                            Row = "G"
                        },
                        new
                        {
                            SeatId = "H1",
                            Number = (byte)1,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H2",
                            Number = (byte)2,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H3",
                            Number = (byte)3,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H4",
                            Number = (byte)4,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H5",
                            Number = (byte)5,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H6",
                            Number = (byte)6,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H7",
                            Number = (byte)7,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H8",
                            Number = (byte)8,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H9",
                            Number = (byte)9,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H10",
                            Number = (byte)10,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H11",
                            Number = (byte)11,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "H12",
                            Number = (byte)12,
                            Row = "H"
                        },
                        new
                        {
                            SeatId = "I1",
                            Number = (byte)1,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I2",
                            Number = (byte)2,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I3",
                            Number = (byte)3,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I4",
                            Number = (byte)4,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I5",
                            Number = (byte)5,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I6",
                            Number = (byte)6,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I7",
                            Number = (byte)7,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I8",
                            Number = (byte)8,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I9",
                            Number = (byte)9,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I10",
                            Number = (byte)10,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I11",
                            Number = (byte)11,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "I12",
                            Number = (byte)12,
                            Row = "I"
                        },
                        new
                        {
                            SeatId = "J1",
                            Number = (byte)1,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J2",
                            Number = (byte)2,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J3",
                            Number = (byte)3,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J4",
                            Number = (byte)4,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J5",
                            Number = (byte)5,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J6",
                            Number = (byte)6,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J7",
                            Number = (byte)7,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J8",
                            Number = (byte)8,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J9",
                            Number = (byte)9,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J10",
                            Number = (byte)10,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J11",
                            Number = (byte)11,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J12",
                            Number = (byte)12,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J13",
                            Number = (byte)13,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "J14",
                            Number = (byte)14,
                            Row = "J"
                        },
                        new
                        {
                            SeatId = "K1",
                            Number = (byte)1,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K2",
                            Number = (byte)2,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K3",
                            Number = (byte)3,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K4",
                            Number = (byte)4,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K5",
                            Number = (byte)5,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K6",
                            Number = (byte)6,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K7",
                            Number = (byte)7,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K8",
                            Number = (byte)8,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K9",
                            Number = (byte)9,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K10",
                            Number = (byte)10,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K11",
                            Number = (byte)11,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K12",
                            Number = (byte)12,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K13",
                            Number = (byte)13,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "K14",
                            Number = (byte)14,
                            Row = "K"
                        },
                        new
                        {
                            SeatId = "L1",
                            Number = (byte)1,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L2",
                            Number = (byte)2,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L3",
                            Number = (byte)3,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L4",
                            Number = (byte)4,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L5",
                            Number = (byte)5,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L6",
                            Number = (byte)6,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L7",
                            Number = (byte)7,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L8",
                            Number = (byte)8,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L9",
                            Number = (byte)9,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L10",
                            Number = (byte)10,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L11",
                            Number = (byte)11,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L12",
                            Number = (byte)12,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L13",
                            Number = (byte)13,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L14",
                            Number = (byte)14,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L15",
                            Number = (byte)15,
                            Row = "L"
                        },
                        new
                        {
                            SeatId = "L16",
                            Number = (byte)16,
                            Row = "L"
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.SeatNo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuditoriumId")
                        .HasColumnType("int");

                    b.Property<string>("SeatId")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("Stauts")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriumId");

                    b.HasIndex("SeatId");

                    b.ToTable("SeatNos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuditoriumId = 1,
                            SeatId = "A1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 2,
                            AuditoriumId = 1,
                            SeatId = "A2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 3,
                            AuditoriumId = 1,
                            SeatId = "A3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 4,
                            AuditoriumId = 1,
                            SeatId = "A4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 5,
                            AuditoriumId = 1,
                            SeatId = "A5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 6,
                            AuditoriumId = 1,
                            SeatId = "A6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 7,
                            AuditoriumId = 1,
                            SeatId = "A7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 8,
                            AuditoriumId = 1,
                            SeatId = "A8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 9,
                            AuditoriumId = 1,
                            SeatId = "A9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 10,
                            AuditoriumId = 1,
                            SeatId = "A10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 11,
                            AuditoriumId = 1,
                            SeatId = "A11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 12,
                            AuditoriumId = 1,
                            SeatId = "A12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 13,
                            AuditoriumId = 1,
                            SeatId = "B1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 14,
                            AuditoriumId = 1,
                            SeatId = "B2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 15,
                            AuditoriumId = 1,
                            SeatId = "B3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 16,
                            AuditoriumId = 1,
                            SeatId = "B4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 17,
                            AuditoriumId = 1,
                            SeatId = "B5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 18,
                            AuditoriumId = 1,
                            SeatId = "B6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 19,
                            AuditoriumId = 1,
                            SeatId = "B7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 20,
                            AuditoriumId = 1,
                            SeatId = "B8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 21,
                            AuditoriumId = 1,
                            SeatId = "B9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 22,
                            AuditoriumId = 1,
                            SeatId = "B10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 23,
                            AuditoriumId = 1,
                            SeatId = "B11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 24,
                            AuditoriumId = 1,
                            SeatId = "B12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 25,
                            AuditoriumId = 1,
                            SeatId = "C1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 26,
                            AuditoriumId = 1,
                            SeatId = "C2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 27,
                            AuditoriumId = 1,
                            SeatId = "C3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 28,
                            AuditoriumId = 1,
                            SeatId = "C4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 29,
                            AuditoriumId = 1,
                            SeatId = "C5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 30,
                            AuditoriumId = 1,
                            SeatId = "C6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 31,
                            AuditoriumId = 1,
                            SeatId = "C7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 32,
                            AuditoriumId = 1,
                            SeatId = "C8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 33,
                            AuditoriumId = 1,
                            SeatId = "C9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 34,
                            AuditoriumId = 1,
                            SeatId = "C10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 35,
                            AuditoriumId = 1,
                            SeatId = "C11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 36,
                            AuditoriumId = 1,
                            SeatId = "C12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 37,
                            AuditoriumId = 1,
                            SeatId = "D1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 38,
                            AuditoriumId = 1,
                            SeatId = "D2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 39,
                            AuditoriumId = 1,
                            SeatId = "D3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 40,
                            AuditoriumId = 1,
                            SeatId = "D4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 41,
                            AuditoriumId = 1,
                            SeatId = "D5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 42,
                            AuditoriumId = 1,
                            SeatId = "D6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 43,
                            AuditoriumId = 1,
                            SeatId = "D7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 44,
                            AuditoriumId = 1,
                            SeatId = "D8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 45,
                            AuditoriumId = 1,
                            SeatId = "D9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 46,
                            AuditoriumId = 1,
                            SeatId = "D10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 47,
                            AuditoriumId = 1,
                            SeatId = "D11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 48,
                            AuditoriumId = 1,
                            SeatId = "D12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 49,
                            AuditoriumId = 1,
                            SeatId = "E1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 50,
                            AuditoriumId = 1,
                            SeatId = "E2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 51,
                            AuditoriumId = 1,
                            SeatId = "E3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 52,
                            AuditoriumId = 1,
                            SeatId = "E4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 53,
                            AuditoriumId = 1,
                            SeatId = "E5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 54,
                            AuditoriumId = 1,
                            SeatId = "E6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 55,
                            AuditoriumId = 1,
                            SeatId = "E7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 56,
                            AuditoriumId = 1,
                            SeatId = "E8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 57,
                            AuditoriumId = 1,
                            SeatId = "E9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 58,
                            AuditoriumId = 1,
                            SeatId = "E10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 59,
                            AuditoriumId = 1,
                            SeatId = "E11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 60,
                            AuditoriumId = 1,
                            SeatId = "E12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 61,
                            AuditoriumId = 1,
                            SeatId = "F1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 62,
                            AuditoriumId = 1,
                            SeatId = "F2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 63,
                            AuditoriumId = 1,
                            SeatId = "F3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 64,
                            AuditoriumId = 1,
                            SeatId = "F4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 65,
                            AuditoriumId = 1,
                            SeatId = "F5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 66,
                            AuditoriumId = 1,
                            SeatId = "F6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 67,
                            AuditoriumId = 1,
                            SeatId = "F7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 68,
                            AuditoriumId = 1,
                            SeatId = "F8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 69,
                            AuditoriumId = 1,
                            SeatId = "F9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 70,
                            AuditoriumId = 1,
                            SeatId = "F10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 71,
                            AuditoriumId = 1,
                            SeatId = "F11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 72,
                            AuditoriumId = 1,
                            SeatId = "F12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 73,
                            AuditoriumId = 1,
                            SeatId = "G1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 74,
                            AuditoriumId = 1,
                            SeatId = "G2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 75,
                            AuditoriumId = 1,
                            SeatId = "G3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 76,
                            AuditoriumId = 1,
                            SeatId = "G4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 77,
                            AuditoriumId = 1,
                            SeatId = "G5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 78,
                            AuditoriumId = 1,
                            SeatId = "G6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 79,
                            AuditoriumId = 1,
                            SeatId = "G7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 80,
                            AuditoriumId = 1,
                            SeatId = "G8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 81,
                            AuditoriumId = 1,
                            SeatId = "G9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 82,
                            AuditoriumId = 1,
                            SeatId = "G10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 83,
                            AuditoriumId = 1,
                            SeatId = "G11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 84,
                            AuditoriumId = 1,
                            SeatId = "G12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 85,
                            AuditoriumId = 1,
                            SeatId = "H1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 86,
                            AuditoriumId = 1,
                            SeatId = "H2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 87,
                            AuditoriumId = 1,
                            SeatId = "H3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 88,
                            AuditoriumId = 1,
                            SeatId = "H4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 89,
                            AuditoriumId = 1,
                            SeatId = "H5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 90,
                            AuditoriumId = 1,
                            SeatId = "H6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 91,
                            AuditoriumId = 1,
                            SeatId = "H7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 92,
                            AuditoriumId = 1,
                            SeatId = "H8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 93,
                            AuditoriumId = 1,
                            SeatId = "H9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 94,
                            AuditoriumId = 1,
                            SeatId = "H10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 95,
                            AuditoriumId = 1,
                            SeatId = "H11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 96,
                            AuditoriumId = 1,
                            SeatId = "H12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 97,
                            AuditoriumId = 1,
                            SeatId = "I1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 98,
                            AuditoriumId = 1,
                            SeatId = "I2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 99,
                            AuditoriumId = 1,
                            SeatId = "I3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 100,
                            AuditoriumId = 1,
                            SeatId = "I4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 101,
                            AuditoriumId = 1,
                            SeatId = "I5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 102,
                            AuditoriumId = 1,
                            SeatId = "I6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 103,
                            AuditoriumId = 1,
                            SeatId = "I7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 104,
                            AuditoriumId = 1,
                            SeatId = "I8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 105,
                            AuditoriumId = 1,
                            SeatId = "I9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 106,
                            AuditoriumId = 1,
                            SeatId = "I10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 107,
                            AuditoriumId = 1,
                            SeatId = "I11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 108,
                            AuditoriumId = 1,
                            SeatId = "I12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 109,
                            AuditoriumId = 1,
                            SeatId = "J1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 110,
                            AuditoriumId = 1,
                            SeatId = "J2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 111,
                            AuditoriumId = 1,
                            SeatId = "J3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 112,
                            AuditoriumId = 1,
                            SeatId = "J4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 113,
                            AuditoriumId = 1,
                            SeatId = "J5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 114,
                            AuditoriumId = 1,
                            SeatId = "J6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 115,
                            AuditoriumId = 1,
                            SeatId = "J7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 116,
                            AuditoriumId = 1,
                            SeatId = "J8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 117,
                            AuditoriumId = 1,
                            SeatId = "J9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 118,
                            AuditoriumId = 1,
                            SeatId = "J10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 119,
                            AuditoriumId = 1,
                            SeatId = "J11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 120,
                            AuditoriumId = 1,
                            SeatId = "J12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 121,
                            AuditoriumId = 1,
                            SeatId = "J13",
                            Stauts = false
                        },
                        new
                        {
                            Id = 122,
                            AuditoriumId = 1,
                            SeatId = "J14",
                            Stauts = false
                        },
                        new
                        {
                            Id = 123,
                            AuditoriumId = 1,
                            SeatId = "K1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 124,
                            AuditoriumId = 1,
                            SeatId = "K2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 125,
                            AuditoriumId = 1,
                            SeatId = "K3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 126,
                            AuditoriumId = 1,
                            SeatId = "K4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 127,
                            AuditoriumId = 1,
                            SeatId = "K5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 128,
                            AuditoriumId = 1,
                            SeatId = "K6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 129,
                            AuditoriumId = 1,
                            SeatId = "K7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 130,
                            AuditoriumId = 1,
                            SeatId = "K8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 131,
                            AuditoriumId = 1,
                            SeatId = "K9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 132,
                            AuditoriumId = 1,
                            SeatId = "K10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 133,
                            AuditoriumId = 1,
                            SeatId = "K11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 134,
                            AuditoriumId = 1,
                            SeatId = "K12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 135,
                            AuditoriumId = 1,
                            SeatId = "K13",
                            Stauts = false
                        },
                        new
                        {
                            Id = 136,
                            AuditoriumId = 1,
                            SeatId = "K14",
                            Stauts = false
                        },
                        new
                        {
                            Id = 137,
                            AuditoriumId = 1,
                            SeatId = "L1",
                            Stauts = false
                        },
                        new
                        {
                            Id = 138,
                            AuditoriumId = 1,
                            SeatId = "L2",
                            Stauts = false
                        },
                        new
                        {
                            Id = 139,
                            AuditoriumId = 1,
                            SeatId = "L3",
                            Stauts = false
                        },
                        new
                        {
                            Id = 140,
                            AuditoriumId = 1,
                            SeatId = "L4",
                            Stauts = false
                        },
                        new
                        {
                            Id = 141,
                            AuditoriumId = 1,
                            SeatId = "L5",
                            Stauts = false
                        },
                        new
                        {
                            Id = 142,
                            AuditoriumId = 1,
                            SeatId = "L6",
                            Stauts = false
                        },
                        new
                        {
                            Id = 143,
                            AuditoriumId = 1,
                            SeatId = "L7",
                            Stauts = false
                        },
                        new
                        {
                            Id = 144,
                            AuditoriumId = 1,
                            SeatId = "L8",
                            Stauts = false
                        },
                        new
                        {
                            Id = 145,
                            AuditoriumId = 1,
                            SeatId = "L9",
                            Stauts = false
                        },
                        new
                        {
                            Id = 146,
                            AuditoriumId = 1,
                            SeatId = "L10",
                            Stauts = false
                        },
                        new
                        {
                            Id = 147,
                            AuditoriumId = 1,
                            SeatId = "L11",
                            Stauts = false
                        },
                        new
                        {
                            Id = 148,
                            AuditoriumId = 1,
                            SeatId = "L12",
                            Stauts = false
                        },
                        new
                        {
                            Id = 149,
                            AuditoriumId = 1,
                            SeatId = "L13",
                            Stauts = false
                        },
                        new
                        {
                            Id = 150,
                            AuditoriumId = 1,
                            SeatId = "L14",
                            Stauts = false
                        },
                        new
                        {
                            Id = 151,
                            AuditoriumId = 1,
                            SeatId = "L15",
                            Stauts = false
                        },
                        new
                        {
                            Id = 152,
                            AuditoriumId = 1,
                            SeatId = "L16",
                            Stauts = false
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.SeatReserved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("SeatNoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Stauts")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatNoId");

                    b.ToTable("SeatReserveds", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            SeatNoId = 2,
                            Stauts = true
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 1,
                            SeatNoId = 3,
                            Stauts = true
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 1,
                            SeatNoId = 4,
                            Stauts = true
                        });
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,4)");

                    b.HasKey("Id");

                    b.ToTable("Tickets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vé 2D sử dụng từ 16 tuổi trở lên",
                            Name = "Người lớn",
                            Price = 90000m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Vé 2D sử dụng dưới 16",
                            Name = "Người trẻ em",
                            Price = 75000m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Vé 2D chỉ sử dụng cho suất chiếu sau 22h",
                            Name = "Sau 22h",
                            Price = 50000m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Actor", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Nationality", "Nationality")
                        .WithMany("Actors")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_actor_nationality");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.ActorImage", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Actor", "Actor")
                        .WithMany("ActorImages")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_actorimage_actor");

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Auditorium", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Cinema", "Cinema")
                        .WithMany("Auditoriums")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_auditorium_cinema");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Booking", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.AppUser", "AppUser")
                        .WithMany("Bookings")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_booking_appuser");

                    b.HasOne("Booking_Movie.Data.Entities.Coupon", "Coupon")
                        .WithMany("Bookings")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_booking_coupon");

                    b.HasOne("Booking_Movie.Data.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Bookings")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_booking_paymentmethod");

                    b.HasOne("Booking_Movie.Data.Entities.Screening", "Screening")
                        .WithMany("Bookings")
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_booking_screening");

                    b.Navigation("AppUser");

                    b.Navigation("Coupon");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Screening");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.BookingCombo", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Booking", "Booking")
                        .WithMany("BookingCombos")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bookingcombo_booking");

                    b.HasOne("Booking_Movie.Data.Entities.Combo", "Combo")
                        .WithMany("BookingCombos")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bookingcombo_combo");

                    b.Navigation("Booking");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.BookingTicket", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Booking", "Booking")
                        .WithMany("BookingTickets")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bookingticket_booking");

                    b.HasOne("Booking_Movie.Data.Entities.Ticket", "Ticket")
                        .WithMany("BookingTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bookingticket_ticket");

                    b.Navigation("Booking");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Cast", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Actor", "Actor")
                        .WithMany("Casts")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cast_actor");

                    b.HasOne("Booking_Movie.Data.Entities.Movie", "Movie")
                        .WithMany("Casts")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cast_movie");

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Cinema", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Location", "Location")
                        .WithMany("Cinemas")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cinema_location");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Director", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Nationality", "Nationality")
                        .WithMany("Directors")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_director_nationality");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.DirectorImage", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Director", "Director")
                        .WithMany("DirectorImages")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_directorimage_director");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Movie", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Nationality", "Nationality")
                        .WithMany("Movies")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_movie_nationality");

                    b.HasOne("Booking_Movie.Data.Entities.Producer", "Producer")
                        .WithMany("Movies")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_movie_producer");

                    b.Navigation("Nationality");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.MovieCategory", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Category", "Category")
                        .WithMany("MovieCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_moviecategory_category");

                    b.HasOne("Booking_Movie.Data.Entities.Movie", "Movie")
                        .WithMany("MovieCategories")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_moviecategory_movie");

                    b.Navigation("Category");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.MovieDirector", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Director", "Director")
                        .WithMany("MovieDirectors")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_moviedirector_director");

                    b.HasOne("Booking_Movie.Data.Entities.Movie", "Movie")
                        .WithMany("MovieDirectors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_moviedirector_movie");

                    b.Navigation("Director");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Producer", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Nationality", "Nationality")
                        .WithMany("Producers")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_producer_nationality");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Screening", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Auditorium", "Auditorium")
                        .WithMany("Screenings")
                        .HasForeignKey("AuditoriumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_screening_auditorium");

                    b.HasOne("Booking_Movie.Data.Entities.Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_screening_movie");

                    b.HasOne("Booking_Movie.Data.Entities.ScreeningType", "MovieType")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_screening_movietype");

                    b.Navigation("Auditorium");

                    b.Navigation("Movie");

                    b.Navigation("MovieType");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.SeatNo", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Auditorium", "Auditorium")
                        .WithMany("SeatNos")
                        .HasForeignKey("AuditoriumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_seatno_auditorium");

                    b.HasOne("Booking_Movie.Data.Entities.Seat", "Seat")
                        .WithMany("SeatNos")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_seatno_seat");

                    b.Navigation("Auditorium");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.SeatReserved", b =>
                {
                    b.HasOne("Booking_Movie.Data.Entities.Booking", "Booking")
                        .WithMany("SeatReserveds")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_seatreserved_booking");

                    b.HasOne("Booking_Movie.Data.Entities.SeatNo", "SeatNo")
                        .WithMany("SeatReserveds")
                        .HasForeignKey("SeatNoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_seatreserved_seatno");

                    b.Navigation("Booking");

                    b.Navigation("SeatNo");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Actor", b =>
                {
                    b.Navigation("ActorImages");

                    b.Navigation("Casts");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Auditorium", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatNos");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Booking", b =>
                {
                    b.Navigation("BookingCombos");

                    b.Navigation("BookingTickets");

                    b.Navigation("SeatReserveds");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Category", b =>
                {
                    b.Navigation("MovieCategories");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Cinema", b =>
                {
                    b.Navigation("Auditoriums");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Combo", b =>
                {
                    b.Navigation("BookingCombos");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Coupon", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Director", b =>
                {
                    b.Navigation("DirectorImages");

                    b.Navigation("MovieDirectors");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Location", b =>
                {
                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Movie", b =>
                {
                    b.Navigation("Casts");

                    b.Navigation("MovieCategories");

                    b.Navigation("MovieDirectors");

                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Nationality", b =>
                {
                    b.Navigation("Actors");

                    b.Navigation("Directors");

                    b.Navigation("Movies");

                    b.Navigation("Producers");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Producer", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Screening", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.ScreeningType", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Seat", b =>
                {
                    b.Navigation("SeatNos");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.SeatNo", b =>
                {
                    b.Navigation("SeatReserveds");
                });

            modelBuilder.Entity("Booking_Movie.Data.Entities.Ticket", b =>
                {
                    b.Navigation("BookingTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
